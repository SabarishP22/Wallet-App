plugins {
    alias(libs.plugins.android.application)
    id 'kotlin-kapt'
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.hilt.android)
    alias(libs.plugins.google.services)
}

android {
    namespace 'com.example.walletapp'
    compileSdk 35

    defaultConfig {
        applicationId "com.example.walletapp"
        minSdk 26
        targetSdk 35
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }
    buildFeatures {
        viewBinding = true
    }
}

kapt {
    correctErrorTypes true
}

dependencies {

    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core

    // dagger hilt
    implementation libs.hilt.android
    kapt libs.hilt.compiler

    // nav graph
    implementation libs.navigation.fragment
    implementation libs.navigation.ui

    // view model
    implementation libs.lifecycle.viewmodel.ktx
    implementation libs.lifecycle.livedata.ktx

    // coroutines
    implementation libs.kotlinx.coroutines.android
    implementation libs.kotlinx.coroutines.core

    // firebase
    implementation platform(libs.firebase.bom)
    implementation libs.firebase.analytics

    // firebase auth & store
    implementation libs.firebase.auth
    implementation libs.firebase.firestore

    // zxing for QR-code generator
    implementation libs.zxing.android.embedded

    // QR scanner
    implementation libs.barcode.scanning
    implementation libs.play.services.code.scanner

    // lottie
    implementation libs.lottie

}